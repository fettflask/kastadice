#include <iostream>
#include <ctime>  //Biblotek för random
#include <cstdlib>
using namespace std;


int main()
{
    bool cinOK;
    int vinster = 0;
    int saldo = 0;
    int alder;
    string namn;
    
    //Börjar med att fråga spelarens ålder
    cout << "Welcome to dice throws! Please state your age: " << endl;
    do {
        cin >> alder;
        cinOK = cin.fail();
        if (cinOK == true){ //cin.fail() check
            cin.clear();
            cin.ignore(1000, '\n');
            cout << "You can only type numbers" << endl;
            }   
        } while (cinOK == true);

    if (alder >= 18) {  //Checkar om åldern är 18 eller över
        cout << "Welcome in! What's your name?" << endl;
    }
    else {  //Sparkar ut för unga användare
        cout << "Sorry you're " << 18-alder << " years too young";
        return 0;
    }
    cin >> namn;  //Namn för personalisering
    cout << "Welcome " << namn << "!" << endl << endl; 
    
    
    play:  //goto för att spela igen (bad solution i know)
    //Processs för att sätta i pengar på ett konto
    while (saldo<100){  //Har man mindre än 100kr så måste man sätta in mer pengar 
        cout << "You must have atleast 100kr on your account, please deposit more money (MAX 5000)" << endl;
        int insatt = 0;
        insattcheck:
        do {
            cin >> insatt;
            cinOK = cin.fail();
            if (cinOK == true){  //cin.fail() check 
                cin.clear();
                cin.ignore(1000, '\n');
                cout << "You can only type numbers" << endl;
                }   
            } while (cinOK == true);
    

        if (insatt>5000){  //Checkar så att inte mer än 5000 sätts in
            cout << "You can at most deposit 5000kr" << endl;
            goto insattcheck;  //skickar tillbaka så användaren kan ge nytt värde
        }

    saldo = saldo + insatt;
    cout << namn << ", you have " << saldo << "kr on your account" << endl;
    } 

    //Process för att satsa pengar
    int sats;
    int satsid;
    bool block = true;
    while (block==true){  //block som håller en inom loopen
        cout << "Place your bet! (Type the number before the bet)" << endl << "1. 100kr" << endl << "2. 300kr" << endl << "3. 500kr" << endl;
        satscheck:
        do {
            cin >> satsid;
            cinOK = cin.fail();
            if (cinOK == true){  //cin.fail() check
                cin.clear();
                cin.ignore(1000, '\n');
                cout << "You can only type numbers" << endl;
                }   
            } while (cinOK == true);

        if (satsid>3 || satsid <1){  //Checkar så att man anger ett val som finns
            cout << "You must type an available alternative, 1, 2 or 3" << endl;
            goto satscheck;
        }

        switch (satsid) {
            case 1:  //satsar 100kr
                sats = 100;
                block=false;
                break;
            case 2:  //satsar 300kr
                sats = 300;
                if (saldo<sats){  //Om satsen är större än saldot så blockas man från att gå vidare och skickas tillbaka i loopen
                    cout << "You don't have enough money!" << endl;
                }
                else{  //Har man tillräckligt med pengar så avaktiveras blocken
                    block=false;
                }
                break;
            case 3: 
                sats = 500;  //satsar 500kr
                if (saldo<sats){
                    cout << "You don't have enough money!" << endl;
                }
                else{
                    block=false;
                }
                break;   
        }
    }
    cout << "You betted " << sats << "kr" << endl;
    saldo = saldo-sats;

    //Process för tärningskast
    int spelareVinst = 0;
    int cpuVinst = 0;
    int omgang = 1;
    srand(time(0));  //skapar ett nytt seed för nummergeneratorn

    cout << "DICE THROWS!!!" << endl << "===============" << endl << endl;
    while (spelareVinst<2 && cpuVinst<2)  //Checkar om någon har vunnit 2 omgångar, undviker också onödiga omngångar
    {
        int spelare = 0; //initierar och resetar tärningsvärde
        int spelareDie1 = 0;
        int spelareDie2 = 0;
        int cpu = 0;
        int cpuDie1 = 0;
        int cpuDie2 = 0;

        while (spelare==cpu){  //Så länge som båda tärningarna har samma värde så får dom ett nytt värde, undviker oavgjorda omgångar
            spelareDie1 = rand() % 6 + 1;  //Random funktion
            spelareDie2 = rand() % 6 + 1;
            cpuDie1 = rand() % 6 + 1;
            cpuDie2 = rand() % 6 + 1;

            spelare = spelareDie1 + spelareDie2;
            cpu = cpuDie1 + cpuDie2;
        }

        cout << "Round " << omgang << endl << "=========" << endl;  //visar vilken omgång det är
        omgang++;
        cout << "You rolled: " << spelareDie1 << " & " << spelareDie2 << endl << "Total: " << spelare << endl;

        if(spelareDie1==1){  //Simpel ASCII grafik
            cout << "+-------+ \n"
                    "|       | \n"
                    "|   O   | \n"
                    "|       | \n"
                    "+-------+ \n";
            }
        else if (spelareDie1==2)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|       | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (spelareDie1==3)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|   O   | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (spelareDie1==4)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|       | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (spelareDie1==5)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|   O   | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (spelareDie1==6)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }

        if(spelareDie2==1){
            cout << "+-------+ \n"
                    "|       | \n"
                    "|   O   | \n"
                    "|       | \n"
                    "+-------+ \n";
            }
        else if (spelareDie2==2)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|       | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (spelareDie2==3)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|   O   | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (spelareDie2==4)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|       | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (spelareDie2==5)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|   O   | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (spelareDie2==6)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        
        cout << "Competitor rolled: " << cpuDie1 << " & " << cpuDie2 << endl << "Total: " << cpu << endl;

        if(cpuDie1==1){
            cout << "+-------+ \n"
                    "|       | \n"
                    "|   O   | \n"
                    "|       | \n"
                    "+-------+ \n";
            }
        else if (cpuDie1==2)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|       | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (cpuDie1==3)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|   O   | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (cpuDie1==4)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|       | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (cpuDie1==5)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|   O   | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (cpuDie1==6)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }

        if(cpuDie2==1){
            cout << "+-------+ \n"
                    "|       | \n"
                    "|   O   | \n"
                    "|       | \n"
                    "+-------+ \n";
            }
        else if (cpuDie2==2)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|       | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (cpuDie2==3)
        {
            cout << "+-------+ \n"
                    "|     O | \n"
                    "|   O   | \n"
                    "| O     | \n"
                    "+-------+ \n";
        }
        else if (cpuDie2==4)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|       | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (cpuDie2==5)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "|   O   | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }
        else if (cpuDie2==6)
        {
            cout << "+-------+ \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "| O   O | \n"
                    "+-------+ \n";
        }

        //Process som anger vinnare för omgången
        if (spelare>cpu){  //checkar om spelaren vann eller förlorade omgången
            cout << "You won the round!" << endl;
            spelareVinst++;  //ger vinst till spelaren
        }
        else{
            cout << "You lost the round!" << endl;
            cpuVinst++;  //ger vinst till datorn
        }
        system("pause");
    }

    if (spelareVinst>cpuVinst){  //checkar vem som vann hela spelet
        cout << endl << "Congratulations! You've won the game!" << endl;
        saldo = saldo + sats*2;  //vinstutdelning
        vinster = vinster + sats;  //lägger på vinster
    }
    else {
        cout << endl << "Sorry, you've lost. 90'%' of gamblers give up before their big win!" << endl;
        vinster = vinster - sats;  //Tar bort vinster
    }

    if (vinster>=0){  //Checkar om man har vinster eller förluster
        cout << "You have " << vinster << "kr in gains" << endl;
    }
    else{
        cout << "You have " << vinster << "kr in losses" << endl;
    }
        cout << "You have " << saldo << "kr left on your account" << endl;

    //Process för att spela igen
    int yesno;
    cout << "Do you want to play again?" << endl << "1. Yes" << endl << "2. No" << endl;  //fråga om man vill spela igen
    yesnocheck:
    do {
        cin >> yesno;
        cinOK = cin.fail();
        if (cinOK == true){ //cin.fail() check
            cin.clear();
            cin.ignore(1000, '\n');
            cout << "You can only type numbers" << endl;
            }   
        } while (cinOK == true);

    if (yesno>2 || yesno<1) {
        cout << "You must type 1(Yes) or 2(No)" << endl;
        goto yesnocheck;
    }

    switch (yesno) {
        case 1:  //Spela vidare
            goto play; //bad but it works
            break;
        case 2:  //Avslutar och visar vinster/förluster
            cout << "Thanks for playing " << namn << endl;
            if (vinster>=0){
                cout << "You've won" << vinster << "kr" << endl;
            }
            else{
                cout << "You've lost " << vinster << "kr" << endl;
            }
            system("pause");
            return 0;
    }
}
